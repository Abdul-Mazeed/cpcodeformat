#include "bits/stdc++.h"
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;
using namespace std;
// data structures short forms to initialize better 
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define sz(x) (int)(x).size()
#define endl "\n"
#define INF INT_MAX
#define LLINF LLONG_MAX
#define MOD 1000000007
#define MOD1 998244353
#define fast_io ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define deb(x) cerr << #x << " = " << x << endl
#define vi vector<int>
#define vc vector<char>
#define vll vector<long long>
#define pii pair<int, int>
#define pll pair<long long, long long>
#define umap unordered_map
#define uset unordered_set
#define pq_min priority_queue<int, vector<int>, greater<int>>  
#define pq_max priority_queue<int>  
#define f(i, n) for (int i = 0; i < (n); i++)
#define rf(i, n) for (int i = (n) - 1; i >= 0; i--)
#define f1(i, a, b) for (int i = (a); i <= (b); i++)
#define rf1(i, a, b) for (int i = (b); i >= (a); i--)
#define precise(x) cout << fixed << setprecision(x)
#define print(x) cout << (x) << endl;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
#define sll set<long long>

template<class K> using sset = tree<K, null_type, less<K>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename K, typename V> using hashmap = unordered_map<K, V, hash<K>>;

// basic math operations

ll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }
ll lcm(ll a, ll b) { return (a / gcd(a, b)) * b; }
ll mod_add(ll a, ll b, ll m) { return ((a % m) + (b % m)) % m; }
ll mod_mul(ll a, ll b, ll m) { return ((a % m) * (b % m)) % m; }
ll mod_sub(ll a, ll b, ll m) { return ((a % m) - (b % m) + m) % m; }
ll mod_pow(ll a, ll b, ll m) {
    ll res = 1;
    while (b > 0) {
        if (b & 1) res = mod_mul(res, a, m);
        a = mod_mul(a, a, m);
        b >>= 1;
    }
    return res;
}

ll mod_inv(ll a, ll m) { return mod_pow(a, m - 2, m); }

void solution() {

// real code goes here.

}
int main() {
    fast_io;

    int t;
    cin >> t;
    while (t--) {
        solution();
    }
 
    return 0;
}
